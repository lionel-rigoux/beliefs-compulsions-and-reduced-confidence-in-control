function results = writePOMDP (params, format, filename)

%% check options
if ~exist('params','var')
    error('please specify POMDP parameters');
end

%% ========================================================================
%  Write definitions

spec = [];

% +++++++++++++++++++++++++++++++++++++++++++++++++++++++
% Headers

spec = [spec, sprintf(                                                        ...
['# This is the tiger problem of AAAI paper fame in the new pomdp\n'        , ...
 '# format.  This format is still experimental and subject to change\n'     , ...
 '\n'                                                                       , ...
 'values: reward \n'                                                        , ...
 'states: clean dirty \n'                                                   , ...
 'actions: cook check wash \n'                                              , ...
 'observations: unsoiled soiled \n'] )];

% discount factor
spec = [spec, sprintf(                                                        ...
'discount: %0.6f \n', params.discount                                        ...
)];

% +++++++++++++++++++++++++++++++++++++++++++++++++++++++
% Transitions

spec = [spec, sprintf(                                                        ...
['\n\n'                                                                     , ...  
 '## TRANSITIONS \n'                                                        , ...
 '## T: <action> : <start-state> : <end-state> %%f \n'                      , ...
 '\n'  ] )];

% soiling hands
spec = [spec, sprintf(                                                        ...
['# hands get dirty if doing nothing \n'                                    , ...
 'T : cook : clean : clean %0.6f \n'                                        , ...
 'T : cook : clean : dirty %0.6f \n'                                        , ...
 '\n' ]                                                                     , ...
 1-params.prob_getting_dirty                                               , ...
 params.prob_getting_dirty                                                   ...
)];    

% not washing
 spec = [spec, sprintf(                                                       ...
['# hands does not clean themselves \n'                                     , ...
 'T : cook : dirty : clean 0.0 \n'                                          , ...
 'T : cook : dirty : dirty 1.0 \n'                                          , ...
 '\n'                                                                       , ...
 '# checking does not change anything \n'                                   , ...
 'T : check \n'                                                             , ...
 'identity \n'                                                              , ...
 '\n'  ]                                                                      ...
)];

%  washing
spec = [spec, sprintf(                                                        ...
['# hands stays clean if wash \n'                                           , ...
 'T : wash  : clean : clean  1    \n'                                       , ...
 'T : wash  : clean : dirty  0    \n'                                       , ...
 'T : wash  : dirty : clean %0.6f \n'                                       , ...
 'T : wash  : dirty : dirty %0.6f \n'                                       , ...
 '\n' ]                                                                     , ...
 params.prob_successful_wash                                           , ...
 1-params.prob_successful_wash                                           ...
)]; 



% +++++++++++++++++++++++++++++++++++++++++++++++++++++++
% Observations

spec = [spec, sprintf(                                                        ...
['\n\n'                                                                     , ...  
 '## OBSERVATIONS \n'                                                       , ...
 '## O : <action> : <end-state> : <observation> %%f\n'                      , ...
 '\n'                                                                       , ...
 'O : wash \n'                                                              , ...
 'uniform \n'                                                               , ...
 '\n'                                                                       , ...
 'O : cook \n'                                                             , ...
 'uniform \n'                                                               , ...
 '\n'    ]                                                                    ...
)];

spec = [spec, sprintf(                                                        ...
['O : check : clean \n'                                                     , ...
 '%0.6f %0.6f \n'                                                           , ...
 'O : check : dirty \n'                                                     , ...
 '%0.6f %0.6f \n' ]                                                         , ...
  params.prob_detect_clean  , 1-params.prob_detect_clean    , ...
  1-params.prob_detect_dirty,   params.prob_detect_dirty        ...
)];

% +++++++++++++++++++++++++++++++++++++++++++++++++++++++
% Rewards
%
spec = [spec, sprintf(                                                        ...
['\n\n'                                                                     , ...  
 '## REWARDS \n'                                                            , ...
 '\n'                                                                       , ... 
 'R : wash  : *    : * : *  %0.6f \n'                                       , ...
 'R : check : *    : * : *  %0.6f \n'                                       , ...
 'R : cook : dirty : * : *  %0.6f \n'                                       , ...
 'R : cook : clean : * : *  %0.6f \n'  ]                                    , ...
 params.value_wash                                                         , ...
 params.value_check                                                        , ...
 params.value_cook_dirty                                                   , ... 
 params.value_cook_clean                                                     ...
)];


%% end

switch format
    case 'text'
         results = spec;
    case 'struct'
         filename = tempname(tempdir);
         agent.writePOMDP(params,'file',filename);
         results = agent.readPOMDP(filename);
         delete(filename);
    case 'file'
        % write the specification in a text file
        [fid, errmess] = fopen(filename,'w');
        if fid < 0
            error(errmess);
        end
        fprintf(fid,'%s',spec);
        fclose(fid);

    otherwise
        error('*** format should be ''text'', ''struct'' or ''file''')
end


